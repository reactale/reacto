{"componentChunkName":"component---src-templates-doc-js","path":"/docs/cfg","result":{"data":{"mdx":{"id":"f45301ed-3cb1-572f-a1ff-ecab28263567","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Config Reacto\",\n  \"description\": \"Config reacto helps change the configuration of the reactos that comes after it\",\n  \"slug\": \"docs/cfg\",\n  \"order\": 5\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Config Reacto ((r.cfg.))\"), mdx(\"p\", null, \"Config reacto helps change the configuration of the reactos that comes after it\"), mdx(\"h2\", null, \"Index\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#h2-changing-language\"\n  }), \"Changing Language\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#h2-switching-reacto-printing-off\"\n  }), \"Switching Reacto Printing OFF\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#h2-switching-reacto-printing-on\"\n  }), \"Switching Reacto Printing ON\"))), mdx(H2, {\n    mdxType: \"H2\"\n  }, \" Changing Language \"), mdx(\"p\", null, \"With the help of config-reacto, we can change the output languages of all the reactos that comes after it.\"), mdx(\"p\", null, \"Syntax: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.cfg.setLocale.LANGUAGE_CODE))\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"LANGUAGE_CODE\"), \" is any valid language short codes that the particular browser supports. The full list of can be found at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/playground\"\n  }), \"reacto playground\"), \" under the dropdown named \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Language Codes\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"A Note on Browser Support\"), \": Please note that list contains all the languages that will be supported by all the browsers, one day, maybe in future. In my current testing I have found that, surprisingly, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \" \", mdx(\"strong\", {\n    parentName: \"em\"\n  }, \"Microsoft Edge\"), \" is supporting more languages than \", mdx(\"strong\", {\n    parentName: \"em\"\n  }, \"Google Chrome\"), \" \"), \".\"), mdx(RTOCodeBlock, {\n    mdxType: \"RTOCodeBlock\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# In English,((r.cfg.setLocale.en)) \\ntoday is a ((r.dt.day)) of a ((r.dt.month))\\nand time is ((r.dt.hour24)):((r.dt.min)):((r.dt.sec))\\n\\n# In Bengali,((r.cfg.setLocale.bn)) \\ntoday is a ((r.dt.day)) of a ((r.dt.month))\\nand time is ((r.dt.hour24)):((r.dt.min)):((r.dt.sec))\\n\\n# In Gujrati,((r.cfg.setLocale.gu))\\ntoday is a ((r.dt.day)) of a ((r.dt.month))\\nand time is ((r.dt.hour24)):((r.dt.min)):((r.dt.sec))\\n\\n# In Hindi,((r.cfg.setLocale.hi)) \\ntoday is a ((r.dt.day)) of a ((r.dt.month))\\nand time is ((r.dt.hour24)):((r.dt.min)):((r.dt.sec))\\n\\n# In Marathi,((r.cfg.setLocale.mr))\\ntoday is a ((r.dt.day)) of a ((r.dt.month))\\nand time is ((r.dt.hour24)):((r.dt.min)):((r.dt.sec))\\n\\n# Set things back to English\\n# Or else, next reacto will get affected\\n((r.cfg.setLocale.en)) \\n\"))), mdx(H2, {\n    mdxType: \"H2\"\n  }, \" Switching Reacto Printing OFF \"), mdx(\"p\", null, \"If we want to do some work (e.g. doing calculations) with reacto(s) but don't want their values to be printed on screen, we can use this reacto. It will print blank for all the reactos that come after it.\"), mdx(\"p\", null, \"Syntax: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.cfg.printOff))\")), mdx(RTOCodeBlock, {\n    mdxType: \"RTOCodeBlock\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# Before Turning Print OFF\\n4 + 5 = ((r.calc. 4 + 5))   // Will show \\\"4 + 5 = 9\\\"\\n\\n# After Turning Print OFF\\n((r.cfg.printOff))\\\\\\n4 + 5 = ((r.calc. 4 + 5))   // Will only show \\\"4 + 5 =\\\"\\n\"))), mdx(H2, {\n    mdxType: \"H2\"\n  }, \" Switching Reacto Printing ON \"), mdx(\"p\", null, \"This s opposite of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.cfg.printOff))\"), \", when we want to turn printing back on\"), mdx(\"p\", null, \"Syntax: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.cfg.printOn))\")), mdx(RTOCodeBlock, {\n    mdxType: \"RTOCodeBlock\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# Turning Print OFF\\n((r.cfg.printOff))\\\\\\n10 + 8 = ((r.calc. 10 + 8))   // Will show \\\"10 + 8\\\"\\n\\n# Turning Print ON\\n((r.cfg.printOff))\\\\\\n10 + 8 = ((r.calc. 10 + 8))   // Will show \\\"10 + 8 = 18\\\"\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Config Reacto","description":"Config reacto helps change the configuration of the reactos that comes after it","slug":"docs/cfg"}}},"pageContext":{"id":"f45301ed-3cb1-572f-a1ff-ecab28263567","docMenu":[{"title":"DateTime Reacto","slug":"docs/dt","order":1},{"title":"Variable Reacto","slug":"docs/var","order":2},{"title":"Conditional Reacto","slug":"docs/if","order":3},{"title":"Calc Reacto","slug":"docs/calc","order":4},{"title":"Config Reacto","slug":"docs/cfg","order":5},{"title":"Cheatsheet","slug":"docs/cheatsheet","order":6},{"title":"Reacto Recipes","slug":"docs/recipes","order":7}]}},"staticQueryHashes":["63159454","63159454"]}