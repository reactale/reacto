{"componentChunkName":"component---src-templates-doc-js","path":"/docs/if","result":{"data":{"mdx":{"id":"77742680-9d0a-555a-838f-c4533a295215","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Conditional Reacto\",\n  \"description\": \"Conditional reacto (if-reacto) helps us do something based on a condition\",\n  \"slug\": \"docs/if\",\n  \"order\": 3\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Conditional Reacto \", mdx(\"inlineCode\", {\n    parentName: \"h1\"\n  }, \"((r.if.))\")), mdx(\"p\", null, \"Conditional reacto (if-reacto) helps us do something based on a condition\"), mdx(\"h2\", null, \"A. The Structure and The Operators\"), mdx(\"h3\", null, \"A.1. The Structure\"), mdx(\"p\", null, \"The structure of if-reacto is a but different than other reactos. Inside the reacto body itself it will have the condition i.e. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.if. some_condition ))\"), \" and then after the reacto, inside double curly braces we will have the thing that we want it to perform.\"), mdx(\"p\", null, \"So, the structure is,\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"((r.if. some_condition)) {{ \\n    if_the_condition_is_true\\n    then_come_here\\n }}\\n\")), mdx(\"p\", null, \"The condition to be checked will have a structure of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"operand operator operand\"), \", the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"operands\"), \" can be any number or text or any reacto that resolves to a number or text.\"), mdx(\"h3\", null, \"A.2. The Operators\"), mdx(\"p\", null, \"The available conditional / logical operators are,\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Equal \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"=\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not Equal \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"!=\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Greater Than \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \">\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Greater Than Or Equal \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \">=\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Less Than \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Less Than Or Equal \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<=\"))), mdx(\"h2\", null, \"B. Usages and Exmaples\"), mdx(\"h3\", null, \"B.1. Check If Equal \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"=\")), mdx(\"p\", null, \"If 2 things are equal, then do something.\"), mdx(\"h4\", null, \"Examples\"), mdx(RTOCodeBlock, {\n    mdxType: \"RTOCodeBlock\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# Equality Check\\n\\n# Direct Number Check\\n((r.if. 5 = 5)) {{ Yes, obviously they are equal }}\\n((r.if. 5 = 6)) {{ This line will NOT get printed }}\\\\\\n\\n# Direct Text Check\\n((r.if. Sky is blue = Sky is blue)) {{ Yeah, yeah, the sky is blue ... }}\\n((r.if. Sky is blue = Sky is red)) {{ Nope, false, hence no print for this one ... }}\\\\\\n\\n# One operand a reacto\\n((r.if. r.dt.year = 2021)) {{ This text will be printed only if the current year matches }}\\n((r.if. r.dt.day = Friday)) {{ If current day matches, show this text }}\\n\\n# Both operand reactos\\n((r.var.myFavColor = Blue))\\\\\\n((r.var.yourFavColor = Orange))\\\\\\n((r.var.guessMonth = May))\\\\\\n((r.if. r.var.myFavColor = r.var.yourFavColor)) {{ We both love ((r.var.myFavColor)) }}\\n((r.if. r.var.guessMonth = r.dt.month)) {{ This text will be printed only if current month is what we guessed }}\\n\"))), mdx(\"h3\", null, \"B.2. Check If NOT Equal \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"!=\")), mdx(\"p\", null, \"If 2 things are NOT equal, then do something.\"), mdx(\"h4\", null, \"Examples\"), mdx(RTOCodeBlock, {\n    mdxType: \"RTOCodeBlock\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# Equality Check\\n\\n# Direct Number Check\\n((r.if. 5 != 5)) {{ False, no print }}\\\\\\n((r.if. 5 != 6)) {{ True, 5 is not equal to 6 }}\\n\\n# Direct Text Check\\n((r.if. Sky is blue != Sky is blue)) {{ False, as they are equal }}\\\\\\n((r.if. Sky is blue != Sky is red)) {{ True, two texts are not the same }}\\n\\n# One operand a reacto\\n((r.if. r.dt.year != 2018)) {{ This will show only if the current year is not 2018 }}\\\\\\n((r.if. r.dt.day != Friday)) {{ If current day does not match, show this text }}\\n\\n# Both operand reactos\\n((r.var.myFavColor = Blue))\\\\\\n((r.var.yourFavColor = Orange))\\\\\\n((r.var.guessMonth = May))\\\\\\n((r.if. r.var.myFavColor != r.var.yourFavColor)) {{ True, our favourite colors are different }}\\n((r.if. r.var.guessMonth != r.dt.month)) {{ True, if we guessed wrong month }}\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Conditional Reacto","description":"Conditional reacto (if-reacto) helps us do something based on a condition","slug":"docs/if"}}},"pageContext":{"id":"77742680-9d0a-555a-838f-c4533a295215","docMenu":[{"title":"DateTime Reacto","slug":"docs/dt","order":1},{"title":"Variable Reacto","slug":"docs/var","order":2},{"title":"Conditional Reacto","slug":"docs/if","order":3},{"title":"Calc Reacto","slug":"docs/calc","order":4},{"title":"Config Reacto","slug":"docs/cfg","order":5},{"title":"Cheatsheet","slug":"docs/cheatsheet","order":6},{"title":"Reacto Recipes","slug":"docs/recipes","order":7}]}},"staticQueryHashes":["63159454","63159454"]}