{"componentChunkName":"component---src-templates-doc-js","path":"/docs/cheatsheet","result":{"data":{"mdx":{"id":"e46c577c-3f36-5899-8b52-b3a84cac06b0","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Cheatsheet\",\n  \"description\": \"DateTime Reacto\",\n  \"slug\": \"docs/cheatsheet\",\n  \"order\": 6\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Reacto Cheat Sheet\"), mdx(\"h2\", null, \"Menu\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#introduction\"\n  }), \"Introduction\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#reactos\"\n  }), \"Reactos\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"\"\n  }), \"Recipes\"))), mdx(\"h2\", null, \"Introduction\"), mdx(\"p\", null, \"Reactos are small codes (Reactive Tokens) that can be used within normal texts to give them dynamic meaning. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reacto.reactale.com\"\n  }), \"Reacto\"), \" was developed as a helper project for \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactale.com\"\n  }), \"Reactale\")), mdx(\"h2\", null, \"Reactos\"), mdx(\"h3\", null, \"Date / Time \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"((r.dt))\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.dt.date))\"), \"   yields today's date, a number only, e.g. 27\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.dt.day))\"), \" yields current day's name in the week, e.g. Sunday\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.dt.month))\"), \" yields current month, e.g. February\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.dt.year))\"), \" yields current year, e.g. 2018\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.dt.hour))\"), \" yields current hour in 12 hour format, e.g. 9 PM\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.dt.hour24))\"), \" yields current hour in 24 hour format, e.g. 21\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.dt.min))\"), \" yields current minute, a number only, e.g. 18\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.dt.sec))\"), \" yields current minute, a number only, e.g. 36\"))), mdx(\"h3\", null, \"Config \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"((r.cfg))\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"((r.cfg.langSwitch.LLL))\"), \" Changes the language of Reactos to LLL (language short code, e.g. \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"en\"), \" for \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"English\"), \", \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"beng\"), \" for \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Bengali\"), \" etc)\")), mdx(\"h3\", null, \"Variable \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"((r.var))\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.var.variableName = any_value))\"), \" Saves any value (number or text/multiline) for later use. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"variableName\"), \" should be \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"alphanumeric\"), \". \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.var.variableName))\"), \" yields the value of the variable (set either by user or system)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.var.variableName = text with r.var.otherVar))\"), \" Thus outer r.var can act like a template to be updated later\"))), mdx(\"h3\", null, \"Calc \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"((r.calc))\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.calc. n1 + n2))\"), \" Adds 2 numbers (or reacto vars)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"((r.calc. r.var.v1 + r.var.v2))\"), \" Adds 2 numbers saved earlier in reacto vars\"))), mdx(\"h3\", null, \"If \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"((r.if))\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"((r.if. value1 = value2 )) {{ ... }}\"), \" If value1 equals to value2 then whatever is inside {{ ... }} will get executed\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Cheatsheet","description":"DateTime Reacto","slug":"docs/cheatsheet"}}},"pageContext":{"id":"e46c577c-3f36-5899-8b52-b3a84cac06b0","docMenu":[{"title":"DateTime Reacto","slug":"docs/dt","order":1},{"title":"Variable Reacto","slug":"docs/var","order":2},{"title":"Conditional Reacto","slug":"docs/if","order":3},{"title":"Calc Reacto","slug":"docs/calc","order":4},{"title":"Config Reacto","slug":"docs/cfg","order":5},{"title":"Cheatsheet","slug":"docs/cheatsheet","order":6},{"title":"Reacto Recipes","slug":"docs/recipes","order":7}]}},"staticQueryHashes":["63159454","63159454"]}