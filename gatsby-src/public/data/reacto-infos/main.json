{
	"dt": {
		"id": "dt",
		"name": "Date / Time Reacto",
		"iconClass": "far fa-clock",
		"desc": "Information related to current date, time etc can be obtained using these reactos",
		"reactos": [
			{
				"name": "((r.dt.date))",
				"info": "Get current date",
				"desc": "yields today's date, a number only, e.g. 27",
				"examples": [
					{
						"name": "Date example",
						"fileUrl": "dt/date/ex1.txt"
					}
				]
			},
			{
				"name": "((r.dt.day))",
				"info": "Get current day",
				"desc": "yields current day's name in the week, e.g. Sunday",
				"examples": [
					{
						"name": "Day example",
						"fileUrl": "dt/day/ex1.txt"
					}
				]
			},
			{
				"name": "((r.dt.month))",
				"info": "Get current month",
				"desc": "yields current month, e.g. February",
				"examples": [
					{
						"name": "Month example",
						"fileUrl": "dt/month/ex1.txt"
					}
				]
			},
			{
				"name": "((r.dt.year))",
				"info": "Get current year",
				"desc": "yields current year, e.g. 2018",
				"examples": [
					{
						"name": "Year example",
						"fileUrl": "dt/year/ex1.txt"
					}
				]
			},
			{
				"name": "((r.dt.hour))",
				"info": "Get current hour",
				"desc": "yields current hour in 12 hour format, e.g. 9",
				"examples": [
					{
						"name": "Hour example",
						"fileUrl": "dt/hour/ex1.txt"
					}
				]
			},
			{
				"name": "((r.dt.hour24))",
				"info": "Get current hour #2",
				"desc": "yields current hour in 24 hour format, e.g. 21",
				"examples": [
					{
						"name": "Hour-24 example",
						"fileUrl": "dt/hour24/ex1.txt"
					}
				]
			},
			{
				"name": "((r.dt.min))",
				"info": "Get current minute",
				"desc": "yields current minute, a number only, e.g. 18",
				"examples": [
					{
						"name": "Minute example",
						"fileUrl": "dt/min/ex1.txt"
					}
				]
			},
			{
				"name": "((r.dt.sec))",
				"info": "Get current second",
				"desc": "yields current minute, a number only, e.g. 36",
				"examples": [
					{
						"name": "Second example",
						"fileUrl": "dt/sec/ex1.txt"
					}
				]
			}
		]
	},
	"cfg": {
		"id": "cfg",
		"name": "Config Reacto",
		"iconClass": "fas fa-sliders-h",
		"desc": "These reactos help us change various configurations to control the behaviours of other reactos",
		"reactos": [
			{
				"name": "((r.cfg.langSwitch.LLL))",
				"info": "Change language",
				"desc": "This reacto changes the language of Reactos to LLL. LLL is the language code of any available language, e.g beng (for Bengali), en (for English), hind (for Hindi), mal (for Malayalam) etc. If the given LLL is not available, then it will default to en",
				"examples": [
					{
						"name": "Language switching example",
						"fileUrl": "cfg/langSwitch/ex1.txt"
					}
				]
			}
		]
	},
	"var": {	
		"id": "var",
		"name": "Variable Reacto",
		"iconClass": "fas fa-shopping-basket",
		"desc": "With these reactos we can store whatever data we want to which might help us create Reactive Texts",
		"reactos": [
			{
				"name": "((r.var.variableName = any_value))",
				"info": "Set a variable",
				"desc": "Sets a variable that can be later used for various purpose",
				"examples": [
					{
						"name": "Setting Variable",
						"fileUrl": "var/set/ex1.txt"
					},
					{
						"name": "Setting Variable Multiline",
						"fileUrl": "var/set/ex2.txt"
					}
				]
			},
			{
				"name": "((r.var.variableName))",
				"info": "Get a variable",
				"desc": "yields the value of the variable that was set earlier, either by user or system",
				"examples": [
					{
						"name": "Getting Variable",
						"fileUrl": "var/get/ex1.txt"
					}
				]
			},
			{
				"name": "((r.var._n))",
				"info": "Get nth calc result",
				"desc": "yields the last nth result yielded by calc reacto ((r.calc))",
				"examples": [
					{
						"name": "Getting Results of all Calc Reactos",
						"fileUrl": "var/calc-result/ex1.txt"
					}
				]
			},
			{
				"name": "((r.var.text = some text with some r.var.someVar ))",
				"info": "Putting r.var inside r.var",
				"desc": "yields the result of parent r.var along with interpretation of internal r.var real time",
				"examples": [
					{
						"name": "Interpolating / nesting r.var",
						"fileUrl": "var/var-inside-var/ex1.txt"
					}
				]
			}
		]
	},
	"calc": {
		"id": "calc",
		"name": "Calc Reacto",
		"iconClass": "fas fa-calculator",
		"desc": "These reactos help us calculate 4 basic numeric operations i.e. addition, subtraction, multiplication and division (+ - * /) between 2 numbers or reactos",
		"reactos": [
			{
				"name": "((r.calc. n1 + n2))",
				"info": "Add two numbers",
				"desc": "n1 and n2 can be numbers or reactos. This reacto will add n1 and n2 if each of them can be converted to numbers, else it will return empty",
				"examples": [
					{
						"name": "Adding numbers and reactos",
						"fileUrl": "calc/add-1.txt"
					}
				]
			}
		]
	},
	"if": {
		"id": "if",
		"name": "Conditional (If) Reacto",
		"iconClass": "fas fa-sitemap",
		"desc": "With these reactos we can powerful conditional statements",
		"reactos": [
			{
				"name": "((r.if. value1 = value2 ))",
				"info": "If Equal (=)",
				"desc": "Compares 2 values and if the values are equal, then only executes whatever is there inside the following {{ ... }}",
				"examples": [
					{
						"name": "Compare 2 numbers",
						"fileUrl": "if/equal/compare-numbers.txt"
					},
					{
						"name": "Compare 2 strings",
						"fileUrl": "if/equal/compare-strings.txt"
					},
					{
						"name": "Compare number with reacto",
						"fileUrl": "if/equal/compare-number-with-reacto.txt"
					},
					{
						"name": "Compare string with reacto",
						"fileUrl": "if/equal/compare-string-with-reacto.txt"
					},
					{
						"name": "Compare reacto with reacto",
						"fileUrl": "if/equal/comparing-2-reactos.txt"
					},
					{
						"name": "Proper ordinal number",
						"fileUrl": "if/equal/proper-ordinal-after-number.txt"
					},
					{
						"name": "Comparing months",
						"fileUrl": "if/equal/month-comparison.txt"
					},
					{
						"name": "Comparing days of week",
						"fileUrl": "if/equal/day-comparison.txt"
					}
				]
			},
			{
				"name": "((r.if. value1 != value2 ))",
				"info": "If Not Equal (!=)",
				"desc": "Compares 2 values and if the values are not equal, then only executes whatever is there inside the following {{ ... }}",
				"examples": [
					{
						"name": "Not Equal example 1",
						"fileUrl": "if/not-equal/ex1.txt"
					}
				]
			},
			{
				"name": "((r.if. value1 > value2 ))",
				"info": "If Greater Than (>)",
				"desc": "Compares 2 values and if the value1 is greater than value2, then only executes whatever is there inside the following {{ ... }}",
				"examples": [
					{
						"name": "Greater or Less - 1",
						"fileUrl": "if/misc/multi-if-1.txt"
					}
				]
			},
			{
				"name": "((r.if. value1 !> value2 ))",
				"info": "If Not Greater Than (!>)",
				"desc": "Compares 2 values and if the value1 is not greater than value2, then only executes whatever is there inside the following {{ ... }}",
				"examples": []
			},
			{
				"name": "((r.if. value1 < value2 ))",
				"info": "If Less Than (<)",
				"desc": "Compares 2 values and if the value1 is less than value2, then only executes whatever is there inside the following {{ ... }}",
				"examples": []
			},
			{
				"name": "((r.if. value1 !< value2 ))",
				"info": "If Not Less Than (!<)",
				"desc": "Compares 2 values and if the value1 is not less than value2, then only executes whatever is there inside the following {{ ... }}",
				"examples": []
			}
		]
	},
	"fn": {
		"id": "fn",
		"name": "Funtional Reacto",
		"iconClass": "fas fa-code",
		"desc": "These are reactive functions",
		"reactos": [
			{
				"name": "((r.fn.say __ any string))",
				"info": "Say something to reader",
				"desc": "Mind the double underscore '__' as the separator. Only available on Reactale.com",
				"examples": []
			},
			{
				"name": "((r.fn.goBack __ n))",
				"info": "Roll up n storylets",
				"desc": "Here n is the number of storylets upward. Mind the double underscore '__' as the separator. Only available on Reactale.com",
				"examples": []
			},
			{
				"name": "((r.fn.goTo __ n OR url))",
				"info": "Go to a story or url",
				"desc": "Here 'n' can be a story id or a complete valid url starting with 'http' or 'https'. Mind the double underscore '__' as the separator. Only available on Reactale.com",
				"examples": []
			}
		]
	}
}